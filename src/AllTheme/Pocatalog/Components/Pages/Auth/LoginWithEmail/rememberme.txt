    const handleSubmit = async () => {
        const visiterId = Cookies.get('visiterId');
        if (!confirmPassword.trim()) {
            errors.confirmPassword = 'Password is required';
            return;
        }

        const hashedPassword = hashPasswordSHA1(confirmPassword);

        setIsLoading(true);
        LoginWithEmailAPI(email, '', hashedPassword, '', '', visiterId).then((response) => {
            setIsLoading(false);
            if (response.Data.rd[0].stat === 1) {
                const visiterID = Cookies.get('visiterId');
                Cookies.set('userLoginCookie', response?.Data?.rd[0]?.Token);
                if(rememberMe){
                    const Token = generateToken(response?.Data?.rd[0]?.Token,1);
                    localStorage?.setItem('AuthToken',JSON?.stringify(Token));
                }else{
                    const Token = generateToken(response?.Data?.rd[0]?.Token,0);
                    localStorage?.setItem('AuthToken',JSON?.stringify(Token));
                }
                sessionStorage.setItem('registerEmail', email)
                setIsLoginState(true)
                sessionStorage.setItem('LoginUser', true)
                sessionStorage.setItem('loginUserDetail', JSON.stringify(response.Data.rd[0]));

                GetCountAPI(visiterID).then((res) => {
                    if (res) {
                        setCartCountNum(res?.cartcount)
                        setWishCountNum(res?.wishcount)
                    }
                }).catch((err) => {
                    if (err) {
                        console.log("getCountApiErr", err);
                    }
                })

                CurrencyComboAPI(response?.Data?.rd[0]?.id).then((response) => {
                    if (response?.Data?.rd) {
                        let data = JSON.stringify(response?.Data?.rd)
                        sessionStorage.setItem('CurrencyCombo', data)
                    }
                }).catch((err) => console.log(err))


                MetalColorCombo(response?.Data?.rd[0]?.id).then((response) => {
                    if (response?.Data?.rd) {
                        let data = JSON.stringify(response?.Data?.rd)
                        sessionStorage.setItem('MetalColorCombo', data)
                    }
                }).catch((err) => console.log(err))


                MetalTypeComboAPI(response?.Data?.rd[0]?.id).then((response) => {
                    if (response?.Data?.rd) {
                        let data = JSON.stringify(response?.Data?.rd)
                        sessionStorage.setItem('metalTypeCombo', data)
                    }
                }).catch((err) => console.log(err))

                if (redirectEmailUrl) {
                    navigation(redirectEmailUrl, { state });
                    sessionStorage.setItem('Loginkey', JSON.stringify(location?.state?.SecurityKey))
                } else {
                    navigation('/', { state })
                }

                // pdDataCalling()
                // designDataCall()
                // getCountFunc()
                // getDesignPriceList()

                // handelCurrencyData()
                // getAllProdData()
                window.location.reload();
            } else {
                if (response.Data.rd[0].stat_msg == "User Time Off") {
                    errors.confirmPassword = 'User Time Off'
                } else if (response.Data.rd[0].stat_msg == 'User Login Off') {
                    errors.confirmPassword = 'User Login Off'
                } else if (response.Data.rd[0].stat_msg == 'User Not Active') {
                    errors.confirmPassword = 'User Not Active'
                } else {
                    errors.confirmPassword = 'Password is Invalid'
                }
            }
        }).catch((err) => console.log(err))

        // try {
        //     setIsLoading(true);

        //     const storeInit = JSON.parse(sessionStorage.getItem('storeInit'));
        //     const { FrontEnd_RegNo } = storeInit;
        //     const combinedValue = JSON.stringify({
        //         userid: `${email}`, mobileno: '', pass: `${hashedPassword}`, mobiletoken: '', FrontEnd_RegNo: `${FrontEnd_RegNo}`
        //     });
        //     const encodedCombinedValue = btoa(combinedValue);
        //     const body = {
        //         "con": "{\"id\":\"\",\"mode\":\"WEBLOGIN\"}",
        //         "f": "LoginWithEmail (handleSubmit)",
        //         p: encodedCombinedValue
        //     };
        //     const response = await CommonAPI(body);

        //     if (response.Data.rd[0].stat === 1) {
        //         let resData = response.Data.rd[0]
        //         sessionStorage.setItem('registerEmail', email)
        //         setIsLoginState('true')
        //         sessionStorage.setItem('LoginUser', 'true')
        //         sessionStorage.setItem('loginUserDetail', JSON.stringify(response.Data.rd[0]));
        //         navigation('/');
        //         pdDataCalling()
        //         designDataCall()
        //         getCountFunc()
        //         getDesignPriceList()
        //         // handelCurrencyData()
        //         // getAllProdData()
        //         // window.location.reload(); 
        //     } else {
        //         errors.confirmPassword = 'Password is Invalid'
        //     }
        // } catch (error) {
        //     console.error('Error:', error);
        // } finally {
        //     setIsLoading(false);
        // }
    };
